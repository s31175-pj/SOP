Ćwiczenia 1
1. Napisz skrypt, który sprawdzi, czy podano więcej niż jeden parametr. Jeśli tak, to niech wyświetli pierwszy parametr. Jeśli nie, to niech wyświetli komunikat, że nie podano parametrów.


#!/bin/bash
if [ $# -gt 1 ] ; then
        echo $1
elif [ $# -le 1 ] ; then
        echo "Nie podano argumentów"
fi


2. Napisz skrypt, który:

sprawdzi, czy istnieje plik config.cfg w bieżącym katalogu.

Jeśli taki plik istnieje, to niech go wykona.

Jeśli nie istnieje, to niech sprawdzi, czy podano argument i wykona plik o nazwie takiej jak wartość argumentu (parametru) skryptu.

Jeśli żadne z powyższych nie nastąpiło, to niech wyświetli komunikat o błędzie.


#!/bin/bash
if test -f ./config.cfg; then
./config.cfg
elif test -f ./$1; then
./$1
else
echo "Błąd: Brak podanych plików"
fi


3. Napisz skrypt, który:

sprawdzi, czy jego nazwa kończy się .sh .

Jeśli nie, to niech zmieni swoją nazwę poprzez dopisanie tego rozszerzenia (rozszerzenie nazwy pliku). Sprawdzenie można zrobić na kilka sposobów, polecam przetestować 3 typowe:

dopasowanie do wyrażenia regularnego (to jest bardziej uniwersalny sposób)

porównanie ostatnich 3 liter nazwy skryptu

użyć wbudowanego w basha mechanizmu do wyciągania części napisów ${%}, ${%%}, ${#}, ${##} 


#!/bin/bash

script_name="${0##*/}"
ext="${script_name##*.}"
script_name="${script_name%.*}"

if [[ "$ext" =~ sh ]] ; then
        echo "Poprawne rozszerzenie pliku"
else
        mv "$0" "$script_name.sh"
fi


4. Napisz skrypt, który 

sprawdzi, czy w bieżącym katalogu jest więcej niż 5 plików. 

Jeśli tak, to wypisze odpowiedni komunikat z informacją że tak jest.
Podpowiem:

ls - wyświetla listę plików

wc - word count - zlicza znaki, słowa i linie

grep ma parametr który też może podawać ilość wystąpień wzorca w strumieniu - poszukać w manualu jaki to parametr

może warto użyć także innego polecenia by znaleźć pliki?


#!/bin/bash

count=$(ls -A | wc -w)

if [ "$count" -gt 5 ] ; then
        echo "W katalogu jest więcej niż 5 plików"
else
        echo "W pliku nie ma wystarczająco plików"
fi

Ćwiczenia 2
1. Napisz skrypt, który będzie wypisywał liczby od 10 do 1 co 2


#!/bin/bash

for i in $(seq 10 -2 1); do echo $i; done


2. Napisz skrypt, który będzie wypisywał wszystkie argumenty wywołania skryptu (pamiętaj o tym, że argument może w sobie zawierać jakieś spacje) napisane w cudzysłowach.


#!/bin/bash

for var in "$@"; do  echo "$var"; done


3. Napisz skrypt, który wypisze listę plików i katalogów bieżącego katalogu poprzedzając każdą nazwę pliku tekstem "Patrzcie Państwo, oto plik: ".
Podpowiedź: https://en.wikipedia.org/wiki/Internal_field_separator


#!/bin/bash

for file in ./*; do
        file="${file##*/}"
        echo "Patrzcie Państwo, oto plik: $file";
done


4. Napisz skrypt, który dla każdego pliku w bieżącym katalogu, który ma rozszerzenie .c wykona taką komendę:

   cc (tu_nazwa_pliku) -o (tu_nazwa_pliku_bez_rozszerzenia)
Oczywiście zamień (tu_nazwa_pliku) na nazwę pliku, a (tu_nazwa_pliku_bez_rozszerzenia) na nazwę pliku z obciętym rozszerzeniem. Jeśli chcesz przykładowe pliki do potestowania, oto one :-) http://lmgtfy.com/?q=example+c+file


#!/bin/bash

for file in ./*; do
        if [[ "${file##*.}" =~ "c" ]] ; then
        cc "$file" -o "${file%.*}"
        fi;
done


5. Napisz skrypt, który wczyta listę plików do wypisania z wiersza poleceń, a następnie wypisze ich zawartości raz w kolejności od początku do końca, a raz na odwrót. Podpowiedzi:

indeksy ujemne tablicy mogą się przydać

można wyliczać wartości wyrażeń arytmetycznych (i+1)

przyda się for

może się przydać: cat oraz tac ale postaraj się zrobić to bez używania tych poleceń (drukowanie znak po znaku od początku do końca i od końca do początku). Pamiętaj, że nie tylko kolejność całych wierszy ma być odwrócona ale także kolejność znaków w wierszu.


#!/bin/bash
i=" "
TAB=()

while [ "$i" != "" ]; do
        read -p "Podaj nazwę pliku: " i
        if [ -f "$i" ]; then
                TAB+=("$i");
        fi;
done

for i in "${TAB[@]}"; do
        value=$(cat "$i")

        echo -e "Oto plik $i:\n"

        for j in "$value"; do
                echo -n "$j";
        done

        echo -e "\n\nA teraz od tyłu:\n"
        for ((j=${#value}-1; j>=0; j--)); do
                echo -n "${value:$j:1}";
        done;
        echo -e "\n"
done


Ćwiczenia 3
1. Przygotuj skrypt z funkcją która będzie wypisywała tekst pokolorowany na zadany kolor. Niech funkcja ta przyjmuje dwa argumenty - tekst i kolor.
Zobacz man console_codes oraz składnię komendy echo (lub przykład z poprzednich zajęć).

2. Przygotuj funkcję obliczającą rekurencyjnie ciąg Fibonacciego. Niech wynik zwraca za pomocą return. Czy są jakieś ograniczenia?
Rekurencyjnie i return czyli:

Nie używamy pętli

Nie używamy echo

Wartość ma być zwracana przez literał return


Zadanie domowe
W przypadku bardzo podobnych rozwiazań nie będę ich uznawał.

Przygotuj wyrażenie regularne, które będzie sprawdzało, czy tekst jest poprawnie napisanym polskim imieniem (od wielkiej litery, może mieć tylko litery i zawierać polskie znaki).

Przygotuj wyrażenie regularne sprawdzające czy tekst jest kodem pocztowym (cały tekst, czyli zaczyna się od cyfry i kończy się cyfrą).

Przygotuj wyrażenie regularne sprawdzające e-mail.

Napisz skrypt który będzie pobierał jeden argument z linii komend i wypisywał informację o tym, czy jest to imie, kod pocztowy, czy też email.

#!/bin/bash
value=$1
#if [[ "$value" =~ ^[A-Z][\p{L}]*$ ]]; then
if [[ "$value" =~ ^[A-Z][a-z]*$ ]]; then
        echo "Imie"
elif [[ "$value" =~ ^[0-9]{2}\-[0-9]{3}$ ]]; then
        echo "Kod pocztowy"
elif [[ "$value" =~ ^[\w-.+]+@([\w-]+.)+[\w-]{2,4}$ ]]; then
        echo "Email"
else
        echo "niedziala"
fi